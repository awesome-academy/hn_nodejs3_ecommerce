extends ../layoutAdmin

block admin_content 
  .table-responsive
    .d-flex.mb-3
      div.w-50.ms-3
        label.form-label(for='keyword').pe-2
          | #{t('admin.user.search')}
        .input-group
          input#keyword.form-control(type='search' placeholder='Search by name and address' aria-describedby='search-icon-1')
      div.w-25.px-3
        label.form-label(for='gender').pe-2
          | #{t('admin.user.gender')}
        select#gender.form-select
          option(disabled selected value=null) -- #{t('selectAnOption')} --
          each gender in genders
            option(value=gender) #{gender}
      div.w-20.px-2
        label.form-label(for='status').pe-2
          | #{t('admin.user.status')}
        select#status.form-select
          option(disabled selected value=null) -- #{t('selectAnOption')} --
          each status in statuses
            option(value=status) #{status}
      .w-5.px-2 
        span#searchUser.search-icon-1.input-group-text.p-10px.mt-30px.justify-content-center
          i.fa.fa-search
    .table-wrapper
      .table-title
        .row
          .col-sm-5
            h2.text-white #{t('admin.user.userManagement')}
          .col-sm-7
            a.btn.btn-secondary(href='/admin/user/create')
              i.fas.fa-plus
              span #{t('admin.user.addNewUser')}
            a.btn.btn-secondary(href='#')
              i.fas.fa-file-export
              span #{t('admin.user.exportToExcel')}
      table.table.table-hover
        thead
          tr
            th #{t('admin.user.name')}
            th #{t('admin.user.email')}
            th #{t('admin.user.phone')}
            th #{t('admin.user.gender')}
            th #{t('admin.user.dateOfBirth')}
            th #{t('admin.user.address')}
            th #{t('admin.user.status')}
            th #{t('admin.user.action')}
        tbody
          each user in users
            tr
              td.w-250px
                a(href=`/admin/user/${user.id}`)
                  img.avatar.h-60px.w-60px(src=user.avatar alt='Avatar')
                  |  #{user.name}
              td #{user.email}
              td #{user.phone}
              td #{user.gender}
              td #{user.dateOfBirth}
              td.text-break.w-300px #{user.address}
              td
                if user.isActive
                  span.status.text-success &bull;
                  |  #{t('admin.user.active')}
                else 
                  span.status.text-danger &bull;
                  |  #{t('admin.user.inactive')}
              td
                if user.isActive
                  button.inactiveUser.btn.btn-primary.border-0.border-secondary.py-3.px-4.rounded-pill.text-white.w-100.bg-gray(data-user-id=user.id) #{t('admin.user.inactive')}
                else 
                  button.activeUser.btn.btn-primary.border-0.border-secondary.py-3.px-4.rounded-pill.text-white.w-100(data-user-id=user.id) #{t('admin.user.active')}
      .col-12
        .pagination.d-flex.justify-content-center.mt-5
          each val in Array.from({length: pageLength}, (_, i) => i + 1)
            if val === page
              a.active.rounded(href='#') #{val}
            else
              a.rounded(href='#') #{val}

extends ../layoutAdmin

block admin_content
  .row.mt-5
    .col-md-6.offset-md-3
      h1 #{t('admin.product.product')}
      form(method='POST' enctype='multipart/form-data' actions='')
        .mb-3
          label.form-label(for='images')
            | #{t('admin.product.productImages')}
            sup.text-danger *
          input#images.form-control(type='file' multiple="" required name='images')
          if errors
            - let error= errors.find(e => e.path == 'images')
            if error
              p.text-danger #{error.msg}
        .mb-3 
          label.form-label(for='category')
            | #{t('admin.product.category')}
            sup.text-danger *
          select#category.form-select(name='category')
            if product
              each category in categories
                option(value=category.name selected=(category.name === product.category.name)) #{category.name}
            else 
              each category in categories
                option(value=category.name) #{category.name}
          if errors
            - let error= errors.find(e => e.path == 'category')
            if error
              p.text-danger #{error.msg}
        .mb-3
          label.form-label(for='name') 
            | #{t('admin.product.name')}
            sup.text-danger *
          input#name.form-control(type='text' required name='name' value=(product && product.name ? product.name : ""))
          if errors
            - let error= errors.find(e => e.path == 'name')
            if error
              p.text-danger #{error.msg}
        .mb-3
          label.form-label(for='price') 
            | #{t('admin.product.price')} ($)
            sup.text-danger *
          input#price.form-control(type='number' required name='price' value=(product && product.price ? product.price : 0))
          if errors
            - let error= errors.find(e => e.path == 'price')
            if error
              p.text-danger #{error.msg}
        .mb-3
          label.form-label(for='description')
            | #{t('admin.product.description')}
            sup.text-danger *
          if product
            textarea#description.form-control(rows='3' required name="description")
              | #{product ? product.description : ''}
          else
            textarea#description.form-control(rows='3' required name="description")
          if errors
            - let error= errors.find(e => e.path == 'description')
            if error
              p.text-danger #{error.msg}
        .mb-3
          label.form-label(for='quantity')
            | #{t('admin.product.quantity')}
            sup.text-danger *
          input#quantity.form-control(required type='number' name='quantity' value=(product && product.quantity ? product.quantity : ""))
          if errors
            - let error= errors.find(e => e.path == 'quantity')
            if error
              p.text-danger #{error.msg}
        .mb-3
          label.form-label(for='status')
            | #{t('admin.user.status')}
          select#status.form-select(name="status")
            - let statuses = Object.keys(EntityStatus)
            - let defaultValue = product && product.isActive ? EntityStatus.ACTIVE  : EntityStatus.INACTIVE
            each status in statuses
              option(value=status selected=(defaultValue === status)) #{status}
          if errors
            - let error= errors.find(e => e.path == 'isActive')
            if error
              p.text-danger #{error.msg}
        button#submitProduct.btn.btn-primary.border-0.border-secondary.py-3.px-4.rounded-pill.text-white.w-100(type='submit') #{t('admin.product.submit')}

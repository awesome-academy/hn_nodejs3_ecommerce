extends ../layout

block content 
  include ../mixins/_breadcrumb
  +breadcurmb('Cart', [
    {
      href: '/',
      text: t('header.home')
    },
    {
      href: '/cart',
      text: t('header.cart')
    },
  ])

  .container-fluid.py-5
    .container.py-5
      .table-responsive
        table.table
          thead
            tr
              th(scope='col') #{t('cart.products')}
              th(scope='col') #{t('cart.name')}
              th(scope='col') #{t('cart.price')}
              th(scope='col') #{t('cart.quantity')}
              th(scope='col') #{t('cart.total')}
              th(scope='col') #{t('cart.handle')}
          tbody
            each item in items
              tr
                th(scope='row').w-250px
                  .d-flex.align-items-center
                    img.img-fluid.me-5.rounded-circle.w-80px.h-80px(src=item.product.images[0].url alt='')
                td
                  p.mb-0.mt-4 #{item.product.name}
                td
                  p(id=`item-price-${item.product.id}` value=item.product.price).mb-0.mt-4 #{item.product.price} $
                td
                  .input-group.quantity.mt-4.w-100px
                    .input-group-btn
                      button.decreseQuantityItem.btn.btn-sm.rounded-circle.bg-light.border(productId=item.product.id)
                        i.fa.fa-minus
                    input.no-extras.form-control.form-control-sm.text-center.border-0(type='text' disabled value=item.quantity id=`input-quantity-${item.product.id}`)
                    .input-group-btn
                      button.increseQuantityItem.btn.btn-sm.rounded-circle.bg-light.border(productId=item.product.id)
                        i.fa.fa-plus
                td
                  - let total = item.quantity * item.product.price
                  p(id=`total-${item.product.id}`).mb-0.mt-4 #{total} $
                td
                  button.deleteItem.btn.btn-md.rounded-circle.bg-light.border.mt-4(itemId=item.id productName=item.product.name)
                    i.fa.fa-times.text-danger
      .mt-5
        input#coupon.border-0.border-bottom.rounded.me-5.py-3.mb-4(type='text' placeholder='Coupon Code' value=(coupon === underfined ? '' : coupon.name ))
        button#applyCoupon.btn.border-secondary.rounded-pill.px-4.py-3.text-primary(type='button') #{t('cart.applyCoupon')}
        if errors
          - let error = errors.find(error => error.path == 'name') 
          p.text-danger #{error.msg}
      .row.g-4.justify-content-end
        .col-8
        .col-sm-8.col-md-7.col-lg-6.col-xl-4
          .bg-light.rounded
            .p-4
              h1.display-6.mb-4
                span.fw-normal #{t('cart.total')} 
              .d-flex.justify-content-between.mb-4
                h5.mb-0.me-4 #{t('cart.subtotal')} :
                p.mb-0 $#{subtotal}
            if coupon
              .py-4.mb-4.d-flex.justify-content-between
                h5.mb-0.ps-4.me-4 #{t('cart.coupon')}
                p.mb-0.pe-4 - #{coupon.percentage}%
            .py-4.mb-4.border-top.border-bottom.d-flex.justify-content-between
              h5.mb-0.ps-4.me-4 #{t('cart.total')}
              p.mb-0.pe-4 $#{total}
            if coupon
              a#checkout.btn.border-secondary.rounded-pill.px-4.py-3.text-primary.text-uppercase.mb-4.ms-4(href=`/order?coupon=${coupon.name}`) #{t('cart.proceedCheckout')}
            else 
              a#checkout.btn.border-secondary.rounded-pill.px-4.py-3.text-primary.text-uppercase.mb-4.ms-4(href=`/order`) #{t('cart.proceedCheckout')}
